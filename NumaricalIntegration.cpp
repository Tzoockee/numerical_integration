// NumaricalIntegration.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <functional>
#include <iostream>
#include <vector>
#include <math.h>

using namespace std;

typedef function<double(double)> ToIntegrate;

double IntegrateRectangles(double from, double to, ToIntegrate func)
{
	constexpr auto precission = 1000;
	double deltaX = (to - from) / static_cast<double>(precission);

	auto integral = 0.;
	for (auto interval = 0; interval < precission; interval++)
	{
		integral += func(from + deltaX * interval) * deltaX;
	}

	return integral;
}

double IntegrateGauss(double from, double to, ToIntegrate func)
{
	static const vector<pair<double, double>> gauss = {
		{ 0.0486909570091397, -0.0243502926634244 },
		{ 0.0486909570091397, 0.0243502926634244 },
		{ 0.0485754674415034, -0.072993121787799 },
		{ 0.0485754674415034, 0.072993121787799 },
		{ 0.048344762234803, -0.12146281929612 },
		{ 0.048344762234803, 0.12146281929612 },
		{ 0.0479993885964583, -0.169644420423992 },
		{ 0.0479993885964583, 0.169644420423992 },
		{ 0.0475401657148303, -0.217423643740007 },
		{ 0.0475401657148303, 0.217423643740007 },
		{ 0.04696818281621, -0.264687162208767 },
		{ 0.04696818281621, 0.264687162208767 },
		{ 0.0462847965813144, -0.311322871990211 },
		{ 0.0462847965813144, 0.311322871990211 },
		{ 0.0454916279274181, -0.357220158337668 },
		{ 0.0454916279274181, 0.357220158337668 },
		{ 0.0445905581637566, -0.402270157963991 },
		{ 0.0445905581637566, 0.402270157963991 },
		{ 0.0435837245293235, -0.446366017253464 },
		{ 0.0435837245293235, 0.446366017253464 },
		{ 0.0424735151236536, -0.489403145707053 },
		{ 0.0424735151236536, 0.489403145707053 },
		{ 0.0412625632426235, -0.531279464019894 },
		{ 0.0412625632426235, 0.531279464019894 },
		{ 0.0399537411327203, -0.571895646202634 },
		{ 0.0399537411327203, 0.571895646202634 },
		{ 0.0385501531786156, -0.611155355172393 },
		{ 0.0385501531786156, 0.611155355172393 },
		{ 0.03705512854024, -0.648965471254657 },
		{ 0.03705512854024, 0.648965471254657 },
		{ 0.0354722132568824, -0.685236313054233 },
		{ 0.0354722132568824, 0.685236313054233 },
		{ 0.0338051618371416, -0.71988185017161 },
		{ 0.0338051618371416, 0.71988185017161 },
		{ 0.0320579283548516, -0.752819907260531 },
		{ 0.0320579283548516, 0.752819907260531 },
		{ 0.0302346570724025, -0.783972358943341 },
		{ 0.0302346570724025, 0.783972358943341 },
		{ 0.0283396726142595, -0.813265315122797 },
		{ 0.0283396726142595, 0.813265315122797 },
		{ 0.0263774697150547, -0.84062929625258 },
		{ 0.0263774697150547, 0.84062929625258 },
		{ 0.0243527025687109, -0.865999398154092 },
		{ 0.0243527025687109, 0.865999398154092 },
		{ 0.0222701738083833, -0.889315445995114 },
		{ 0.0222701738083833, 0.889315445995114 },
		{ 0.0201348231535302, -0.910522137078502 },
		{ 0.0201348231535302, 0.910522137078502 },
		{ 0.0179517157756973, -0.929569172131939 },
		{ 0.0179517157756973, 0.929569172131939 },
		{ 0.0157260304760247, -0.946411374858402 },
		{ 0.0157260304760247, 0.946411374858402 },
		{ 0.0134630478967186, -0.961008799652053 },
		{ 0.0134630478967186, 0.961008799652053 },
		{ 0.0111681394601311, -0.973326827789911 },
		{ 0.0111681394601311, 0.973326827789911 },
		{ 0.0088467598263639, -0.983336253884626 },
		{ 0.0088467598263639, 0.983336253884626 },
		{ 0.0065044579689784, -0.991013371476744 },
		{ 0.0065044579689784, 0.991013371476744 },
		{ 0.0041470332605625, -0.996340116771955 },
		{ 0.0041470332605625, 0.996340116771955 },
		{ 0.0017832807216964, -0.999305041735772 },
		{ 0.0017832807216964, 0.999305041735772 }
	};

	auto integral = 0.;
	double factor = (to - from) / 2;
	double increment = (to + from) / 2;
	for (auto&& g : gauss)
	{
		integral += g.first * func(factor * g.second + increment);
	}

	return integral * factor;
}

int main()
{
	auto f = [](double x) {return cos(x * x); };

	cout << "Reference = " << 0.9229229248664328 << endl;

	cout << "Rectangles = " << IntegrateRectangles(-2, 2, f) << endl;
	cout << "Gauss =      " << IntegrateGauss(-2, 2, f) << endl;
		
    return 0;
}

